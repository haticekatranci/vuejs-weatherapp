{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"weather-wrap\"\n};\nconst _hoisted_3 = {\n  class: \"location-box\"\n};\nconst _hoisted_4 = {\n  class: \"location\"\n};\nconst _hoisted_5 = {\n  class: \"date\"\n};\nconst _hoisted_6 = {\n  class: \"weather-box\"\n};\nconst _hoisted_7 = {\n  class: \"temp\"\n};\nconst _hoisted_8 = {\n  class: \"weather\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass(typeof $data.weather.main != 'undefined' && $data.weather.main.temp > 16 ? 'warm' : '')\n  }, [_createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"search-bar\",\n    placeholder: \"Type city name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    onKeypress: _cache[1] || (_cache[1] = (...args) => $options.fetchWeather && $options.fetchWeather(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.query]])]), typeof $data.weather.main != 'undefined' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($data.weather.name) + \", \" + _toDisplayString($data.weather.sys.country), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.dateBuilder()), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(Math.round($data.weather.main.temp)) + \"°C\", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($data.weather.weather[0].main), 1\n  /* TEXT */\n  )])])) : _createCommentVNode(\"v-if\", true)])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;EASWA,KAAK,EAAC;;;;EASNA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EAGRA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;uBA1BnBC,oBA8BM,KA9BN,EA8BM;IA7BJC,EAAE,EAAC,KA6BC;IA5BHF,KAAK,yBAAgBG,cAAQC,QAAI,eAAmBD,cAAQC,IAAR,CAAaC,IAAb,GAAiB,gBAAhE;EA4BF,CA9BN,GAMEC,oBAuBO,MAvBP,EAuBO,IAvBP,EAuBO,CAtBLA,oBAQM,KARN,cAQM,iBAPJA,oBAME,OANF,EAME;IALAC,IAAI,EAAC,MAKL;IAJAP,KAAK,EAAC,YAIN;IAHAQ,WAAW,EAAC,gBAGZ;+DAFSL,cAAKM,OAEd;IADCC,UAAQ,yCAAEC,uDAAF;EACT,CANF;;EAAA,kBAIWR,cAGP,CARN,CAsBK,SAbkCA,cAAQC,QAAI,6BAAnDH,oBAYM,KAZN,cAYM,CAXJK,oBAKM,KALN,cAKM,CAJJA,oBAEM,KAFN,cAEMM,iBADDT,cAAQU,IACP,IADc,IACd,GADgBD,iBAAGT,cAAQW,GAAR,CAAYC,OAAf,CADtB,EAC4C;EAAA;EAD5C,CAII,EADJT,oBAA2C,KAA3C,cAA2CM,iBAAtBD,sBAAsB,CAA3C,EAAgC;EAAA;EAAhC,CACI,CALN,CAWI,EAJJL,oBAGM,KAHN,cAGM,CAFJA,oBAA6D,KAA7D,cAA6DM,iBAAxCI,IAAI,CAACC,KAAL,CAAWd,cAAQC,IAAR,CAAaC,IAAxB,CAAwC,IAAR,IAArD,EAAuD;EAAA;EAAvD,CAEI,EADJC,oBAAwD,KAAxD,cAAwDM,iBAAhCT,cAAQe,OAAR,CAAe,CAAf,EAAmBd,IAAa,CAAxD,EAA+C;EAAA;EAA/C,CACI,CAHN,CAII,CAZN,sCAaK,CAvBP,EANF;;EAAA","names":["class","_createElementBlock","id","$data","main","temp","_createElementVNode","type","placeholder","$event","onKeypress","$options","_toDisplayString","name","sys","country","Math","round","weather"],"sourceRoot":"","sources":["/home/haticekatranci/Desktop/vue_weatherApp/src/App.vue"],"sourcesContent":["<!-- HTML -->\n<template>\n  <div\n    id=\"app\"\n    :class=\"\n      typeof weather.main != 'undefined' && weather.main.temp > 16 ? 'warm' : ''\n    \"\n  >\n    <main>\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-bar\"\n          placeholder=\"Type city name\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\"\n        />\n      </div>\n      <div class=\"weather-wrap\" v-if=\"typeof weather.main != 'undefined'\">\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }}, {{ weather.sys.country }}\n          </div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}°C</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<!-- SCRIPTS -->\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    //fetching API from openweathermap.org\n    return {\n      api_key: \"7f40938131da6e5fe5ebeaea4fe2d0da\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {},\n    };\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(\n          `${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`\n        )\n          .then((res) => {\n            return res.json();\n          })\n          .then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n    },\n    //creating dates for the weather\n    dateBuilder() {\n      let d = new Date();\n      let months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      let days = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      return `${day}, ${date} ${month} ${year}`;\n    },\n  },\n};\n</script>\n\n<!-- STYLING -->\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-family: \"Montserrat\", sans-serif;\n}\n\n#app {\n  background-image: url(\"./assets/cold-bg.jpg\");\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.warm {\n  background-image: url(\"./assets/warm-bg.jpg\");\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.25),\n    rgba(0, 0, 0, 0.75)\n  );\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n\n  color: #313131;\n  font-size: 20px;\n  appearance: none;\n  border: none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.5);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #fff;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  /* text-shadow: 1px 3px rgba(0, 0, 0, 0.25); */\n}\n\n.location-box .date {\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  /* font-style: italic; */\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: aliceblue;\n  font-size: 95px;\n  font-weight: 500;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  margin: 30px 0px;\n}\n\n.weather-box .weather {\n  color: #fff;\n  font-size: 40px;\n  font-weight: 500;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}