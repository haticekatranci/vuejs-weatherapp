{"ast":null,"code":"export default {\n  name: \"App\",\n\n  data() {\n    //fetching API from openweathermap.org\n    return {\n      api_key: \"7f40938131da6e5fe5ebeaea4fe2d0da\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {}\n    };\n  },\n\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`).then(res => {\n          return res.json();\n        }).then(this.setResults);\n      }\n    },\n\n    setResults(results) {\n      this.weather = results;\n    },\n\n    //creating dates for the weather\n    dateBuilder() {\n      let d = new Date();\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      return `${day}, ${date} ${month} ${year}`;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqCA,eAAe;EACbA,IAAI,EAAE,KADO;;EAEbC,IAAI,GAAG;IACL;IACA,OAAO;MACLC,OAAO,EAAE,kCADJ;MAELC,QAAQ,EAAE,0CAFL;MAGLC,KAAK,EAAE,EAHF;MAILC,OAAO,EAAE;IAJJ,CAAP;EAMD,CAVY;;EAWbC,OAAO,EAAE;IACPC,YAAY,CAACC,CAAD,EAAI;MACd,IAAIA,CAAC,CAACC,GAAF,IAAS,OAAb,EAAsB;QACpBC,KAAK,CACF,GAAE,KAAKP,QAAS,aAAY,KAAKC,KAAM,uBAAsB,KAAKF,OAAQ,EADxE,CAAL,CAGGS,IAHH,CAGSC,GAAD,IAAS;UACb,OAAOA,GAAG,CAACC,IAAJ,EAAP;QACD,CALH,EAMGF,IANH,CAMQ,KAAKG,UANb;MAOF;IACD,CAXM;;IAYPA,UAAU,CAACC,OAAD,EAAU;MAClB,KAAKV,OAAL,GAAeU,OAAf;IACD,CAdM;;IAeP;IACAC,WAAW,GAAG;MACZ,IAAIC,IAAI,IAAIC,IAAJ,EAAR;MACA,IAAIC,MAAK,GAAI,CACX,SADW,EAEX,UAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,SAVW,EAWX,UAXW,EAYX,UAZW,CAAb;MAcA,IAAIC,IAAG,GAAI,CACT,QADS,EAET,QAFS,EAGT,SAHS,EAIT,WAJS,EAKT,UALS,EAMT,QANS,EAOT,UAPS,CAAX;MASA,IAAIC,GAAE,GAAID,IAAI,CAACH,CAAC,CAACK,MAAF,EAAD,CAAd;MACA,IAAIC,IAAG,GAAIN,CAAC,CAACO,OAAF,EAAX;MACA,IAAIC,KAAI,GAAIN,MAAM,CAACF,CAAC,CAACS,QAAF,EAAD,CAAlB;MACA,IAAIC,IAAG,GAAIV,CAAC,CAACW,WAAF,EAAX;MACA,OAAQ,GAAEP,GAAI,KAAIE,IAAI,IAAIE,KAAK,IAAIE,IAAK,EAAxC;IACD;;EA9CM;AAXI,CAAf","names":["name","data","api_key","url_base","query","weather","methods","fetchWeather","e","key","fetch","then","res","json","setResults","results","dateBuilder","d","Date","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear"],"sourceRoot":"","sources":["/home/haticekatranci/Desktop/vue_weatherApp/src/App.vue"],"sourcesContent":["<!-- HTML -->\n<template>\n  <div\n    id=\"app\"\n    :class=\"\n      typeof weather.main != 'undefined' && weather.main.temp > 16 ? 'warm' : ''\n    \"\n  >\n    <main>\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-bar\"\n          placeholder=\"Type city name\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\"\n        />\n      </div>\n      <div class=\"weather-wrap\" v-if=\"typeof weather.main != 'undefined'\">\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }}, {{ weather.sys.country }}\n          </div>\n          <div class=\"date\">{{ dateBuilder() }}</div>\n        </div>\n\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°C</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<!-- SCRIPTS -->\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    //fetching API from openweathermap.org\n    return {\n      api_key: \"7f40938131da6e5fe5ebeaea4fe2d0da\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      query: \"\",\n      weather: {},\n    };\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(\n          `${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`\n        )\n          .then((res) => {\n            return res.json();\n          })\n          .then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n    },\n    //creating dates for the weather\n    dateBuilder() {\n      let d = new Date();\n      let months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      let days = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      return `${day}, ${date} ${month} ${year}`;\n    },\n  },\n};\n</script>\n\n<!-- STYLING -->\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-family: \"Montserrat\", sans-serif;\n}\n\n#app {\n  background-image: url(\"./assets/cold-bg.jpg\");\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.warm {\n  background-image: url(\"./assets/warm-bg.jpg\");\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.25),\n    rgba(0, 0, 0, 0.75)\n  );\n}\n\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n\n  color: #313131;\n  font-size: 20px;\n  appearance: none;\n  border: none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.5);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .location {\n  color: #fff;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  /* text-shadow: 1px 3px rgba(0, 0, 0, 0.25); */\n}\n\n.location-box .date {\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  /* font-style: italic; */\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: aliceblue;\n  font-size: 95px;\n  font-weight: 500;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  margin: 30px 0px;\n}\n\n.weather-box .weather {\n  color: #fff;\n  font-size: 40px;\n  font-weight: 500;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}